.btn {

  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    border: .1rem solid cyan;
  
    /* allow other elements to sit to their left and right */
    display: inline-block;
    border-radius: 10rem;
  
    /* allows you to change property values smoothly (from one value to another),
    over a given duration. all as in all properties, generally add to init state */
    transition: all .2s;
  
    position: relative;
    font-size: 1.6rem;
  }
  
  &:hover {
    transform: translateY(-0.3rem);
  
    /* direction x, y width and how much blur,
    rgb followed by transparency, all black and somewhat transparent*/
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    &::after {
      /* how big you want the new element to be */
      /* we want animation, but need to put it in initial state &::after */
      transform: scaleX(1.4) scaleY(1.6);
    
      /* we need to fade this out */
      opacity: 0;
    }
  }
  
  /* when you click the element */
  &:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }
  
  &--white {
    background-color: $color-white;
    color: $color-gray-dark;

    &::after {
      background-color: $color-white;
    }
  }
  
  /* add some content after */
  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
  
  
    /* the content after should be absolute and relative to the btn element */
    position: absolute;
    top: 0;
    left: 0;
  
    /* defines position of element on top of each other, we want this to be
    behind the btn */
    z-index: -1;
  
    transition: all .4s;
  }
  
  &--animated {
    /* last one being animation delay */
    animation: moveInBottom 0.4s ease-in-out 0.75s;
  
    /* the 0% transform thing for moveInBottom is applied before animation starts */
    animation-fill-mode: backwards;
  }
}